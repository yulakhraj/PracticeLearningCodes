1. To find min & max in array
pair<long long, long long> getMinMax(long long a[], int n) {
    // sort(a,a+n);
    // int min=a[0];
    // int max=a[n-1];
    // return{min,max};
    int min=0;
    int max=0;
    for(int i=0;i<n;i++){
        if(a[i]>a[max]){
            max=i;
        }else if(a[i]<a[min]){
            min=i;
        }
    }
    return{a[min],a[max]};
}
------------------------------------------------------
2. Find A missing element in array
int missingNumber(vector<int>& array, int n) {
        sort(array.begin(),array.end());
        int ele=1;
        for(int i=0;i<n;i++){
            if(array[i]==ele){
                ele++;
            }else{
                return ele;
            }
        }
    }
-------------------------------------------------------
3. Wave array
void convertToWave(int n, vector<int>& arr){
    int i=1;
    while(i<n){
        swap(arr[i-1],arr[i]);
            i=i+2;
    }
}
------------------------------------------------------------
4. Reverse array in group
void reverseInGroups(vector<long long>& arr, int n, int k){
    int i=0;
    for(i;i<n-k;i+=k){
    reverse(arr.begin()+i, arr.begin()+i+k);
    }
    reverse(arr.begin()+i, arr.end());
}
------------------------------------------------------------
5. Check if two arrays are equal or not
bool check(vector<ll> A, vector<ll> B, int N) {
        int ans=1;
        sort(A.begin(),A.end());
        sort(B.begin(),B.end());
        if(A.size()!=B.size()){
            return false;
        }
        for(int i=0;i<N;i++){
           if(A[i]!=B[i]){
               ans=0;
           }
        }
        return ans;
}
------------------------------------------------------------
6. First element to occur k times
    int firstElementKTime(int a[], int n, int k)
    {
        unordered_map<int,int>ans;
        for(int i=0;i<n;i++)
        {
            ans[a[i]]++;
            if(ans[a[i]]==k)
            {
                return a[i];
            }
        }
        return -1;
    }
--------------------------------------------------
7. Bitonic Point
int findMaximum(int arr[], int n) {
	    int max=0;
	    for(int i=0;i<n;i++){
	        if(arr[i]>max){
	            max=arr[i];
	        }
	    }
	    return max;
}
------------------------------------
8. 
Q2. find the duplicate array
#include <iostream>
using namespace std;
int main() {
    int arr[] = {3, 4, 15, 20, 30, 70, 20, 120};
	int size = sizeof(arr)/sizeof(int);
	for(int i=0;i<size;i++){
	    for(int j=i+1;j<size;j++){
	        if(arr[i]==arr[j]){
	            cout<<arr[j];
	        }
	    }
	}
}




1. To find min & max in array
2. Find A missing element in array
3. Wave array
4. Reverse array in group
5. Check if two arrays are equal or not
6. First element to occur k times
7. Bitonic Point